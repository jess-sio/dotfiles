set -g default-terminal "screen-256color"

set -g mouse on
# hack for mouse scroll
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

set -g base-index 1
setw -g pane-base-index 1

set-option -g prefix M-d
unbind-key M-d
bind-key M-d send-prefix

bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded"

#setw -g mode-keys vi

bind-key : command-prompt
bind-key r refresh-client
bind-key L clear-history

bind -n M-b command-prompt -p "Name of new session:" "new -s '%1' \; rename-window '%1'"
bind -n M-c command-prompt -p "Name of new window:" "new-window -n '%1' \; select-pane -T '%1'"
bind -n M-t command-prompt -p "Set pane title:" "select-pane -T '%%'"
bind -n M-T command-prompt -p "Set window title:" "rename-window '%%'"
bind , attach -c "#{pane_current_path}"
# easier and faster switching between next/prev window/session
bind-key n next-window
bind-key p previous-window
bind-key N switch-client -n
bind-key P switch-client -p
bind-key space next-window
bind-key bspace previous-window
bind-key enter next-layout

# use vim-like keys for splits and windows
bind-key -n M-v split-window -v
bind-key -n M-s split-window -h
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

# smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n M-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n M-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n M-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n M-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
#bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key M-o rotate-window
bind -n M-\{ swap-pane -U
bind -n M-\} swap-pane -D
bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical
set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80

# choose session with unused 'S' or easier to type 'f' which was never used find
bind -n M-f choose-tree -ZwN
bind-key f choose-tree -Zs

bind-key a last-pane
bind-key q display-panes
bind-key c new-window
bind-key t next-window
bind-key T previous-window
bind-key [ copy-mode
bind-key ] paste-buffer
bind-key -n M-S-Left swap-window -t -1
bind-key -n M-S-Right swap-window -t +1

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"
set-window-option -g display-panes-time 1500

# Messages displayed for 4 seconds
set -g display-time 4000

# Refresh status
set -g status-interval 5

# Scrollback
set -g history-limit 50000
# Status Bar

set-option -g status-left '#[fg=colour4]#S- #[colour16]'
set-option -g status-right "#[fg=colour4] %l:%M%p"
set-option -g status-right-length 60
set-option -g status-fg colour15
set-option -g status-bg "#3A3A3A"
set-option -g renumber-windows on

# Theme
set -g status-style fg=colour16,bg=colour15
set-window-option -g window-status-current-style fg=colour5,bg=colour15
set-option -gw window-status-activity-style fg=colour3,bg=colour15
set -g pane-border-style fg=colour6
set -g pane-active-border-style fg=colour5

set -g pane-border-status top
set -g pane-border-format "#{pane_index}"

# Supposedly fixes pausing in vim
set -s escape-time 1

# Set window notifications
setw -g monitor-activity on # Monitor this window for activity
set -g visual-activity on # Status line notification on activity
# Zsh, with native Max OS X copy/paste via reattach-to-user-namespace
set -g default-command "reattach-to-user-namespace -l /bin/zsh"
set -g default-shell "/bin/zsh"

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

setw -g aggressive-resize on

# Don't let programs name panes
set-window-option -g allow-rename off
set-window-option -g automatic-rename off
set-option -g allow-rename off
set-option -g automatic-rename off

# Tmuxline
source-file ~/.tmux.line

# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

set -g @continuum-restore 'on'
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-capture-pane-contents 'on'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

